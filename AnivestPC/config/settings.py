"""
üîß ANIVEST DESKTOP - –ù–ê–°–¢–†–û–ô–ö–ò –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø
===========================================
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è API –∫–ª—é—á–µ–π, –ë–î –∏ –¥—Ä—É–≥–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
"""

import os
from pathlib import Path

# ===== –û–°–ù–û–í–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò =====

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
APP_NAME = "Anivest Desktop"
APP_VERSION = "1.0.0"
APP_DESCRIPTION = "–î–µ—Å–∫—Ç–æ–ø–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–Ω–∏–º–µ"

# –†–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞
WINDOW_CONFIG = {
    "min_width": 1200,
    "min_height": 800,
    "default_width": 1400,
    "default_height": 900,
    "max_width": 1920,
    "max_height": 1080,
    "resizable": True
}

# ===== –ü–£–¢–ò –ö –§–ê–ô–õ–ê–ú =====

# –ë–∞–∑–æ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ø—Ä–æ–µ–∫—Ç–∞
BASE_DIR = Path(__file__).parent.parent

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–∞–Ω–Ω—ã—Ö
DATA_DIR = BASE_DIR / "data"
DATA_DIR.mkdir(exist_ok=True)

# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
DATABASE_PATH = DATA_DIR / "anivest.db"

# –ö–µ—à
CACHE_DIR = DATA_DIR / "cache"
CACHE_DIR.mkdir(exist_ok=True)

# –ü–æ—Å—Ç–µ—Ä—ã
POSTERS_CACHE_DIR = CACHE_DIR / "posters"
POSTERS_CACHE_DIR.mkdir(exist_ok=True)

# –õ–æ–≥–∏
LOGS_DIR = DATA_DIR / "logs"
LOGS_DIR.mkdir(exist_ok=True)

# ===== API –ù–ê–°–¢–†–û–ô–ö–ò =====

# Shikimori API
SHIKIMORI_CONFIG = {
    "base_url": "https://shikimori.one/api",
    "user_agent": "Anivest Desktop/1.0 (https://anivest.local)",
    "timeout": 10,
    "cache_timeout": 600,  # 10 –º–∏–Ω—É—Ç
    "rate_limit": 5  # RPS (requests per second)
}

# Kodik API
KODIK_CONFIG = {
    "base_url": "https://kodikapi.com",
    "timeout": 15,
    "cache_timeout": 300,  # 5 –º–∏–Ω—É—Ç
    "test_tokens": [
        "447d179e875efe44217f20d1ee2146be",
        "73f8b92d87eb24e1a95e64e9d33d0a34", 
        "2f84e5c78ba6a64f7e3d91c45b0c12aa"
    ]
}

# ===== –ö–ï–®–ò–†–û–í–ê–ù–ò–ï =====

CACHE_CONFIG = {
    "enabled": True,
    "max_size": 1000,  # –ú–∞–∫—Å–∏–º—É–º –∑–∞–ø–∏—Å–µ–π –≤ –ø–∞–º—è—Ç–∏
    "poster_cache_days": 7,  # –°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π —Ö—Ä–∞–Ω–∏—Ç—å –ø–æ—Å—Ç–µ—Ä—ã
    "metadata_cache_hours": 24,  # –°–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤ —Ö—Ä–∞–Ω–∏—Ç—å –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    "cleanup_interval": 3600  # –û—á–∏—Å—Ç–∫–∞ –∫–µ—à–∞ –∫–∞–∂–¥—ã–π —á–∞—Å (—Å–µ–∫—É–Ω–¥—ã)
}

# ===== –ë–ê–ó–ê –î–ê–ù–ù–´–• =====

DATABASE_CONFIG = {
    "path": str(DATABASE_PATH),
    "timeout": 30,
    "check_same_thread": False,
    "backup_enabled": True,
    "backup_interval": 86400  # –ë–µ–∫–∞–ø –∫–∞–∂–¥—ã–µ 24 —á–∞—Å–∞
}

# ===== –õ–û–ì–ò–†–û–í–ê–ù–ò–ï =====

LOGGING_CONFIG = {
    "level": "INFO",  # DEBUG, INFO, WARNING, ERROR
    "file_path": LOGS_DIR / "anivest.log",
    "max_file_size": 10 * 1024 * 1024,  # 10 MB
    "backup_count": 5,
    "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
}

# ===== –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨–°–ö–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò =====

USER_SETTINGS = {
    "theme": "dark",  # dark, light
    "language": "ru",  # ru, en
    "auto_play": False,
    "notifications": True,
    "remember_position": True,
    "auto_mark_watched": True,
    "quality_preference": "720p",  # 480p, 720p, 1080p
    "player_volume": 0.8,
    "sidebar_width": 180
}

# ===== –ì–û–†–Ø–ß–ò–ï –ö–õ–ê–í–ò–®–ò =====

HOTKEYS = {
    "play_pause": "space",
    "next_episode": "ctrl+right", 
    "prev_episode": "ctrl+left",
    "volume_up": "up",
    "volume_down": "down",
    "fullscreen": "f",
    "search": "ctrl+f",
    "favorites": "ctrl+d",
    "home": "ctrl+h",
    "catalog": "ctrl+l"
}

# ===== –õ–ò–ú–ò–¢–´ –ò –û–ì–†–ê–ù–ò–ß–ï–ù–ò–Ø =====

LIMITS = {
    "search_results": 50,
    "popular_anime": 24,
    "seasonal_anime": 12,
    "comments_per_page": 20,
    "max_comment_length": 1000,
    "max_favorites": 1000,
    "max_watch_history": 5000
}

# ===== –§–ò–õ–¨–¢–†–´ –ò –ñ–ê–ù–†–´ =====

ANIME_GENRES = [
    "–≠–∫—à–µ–Ω", "–ü—Ä–∏–∫–ª—é—á–µ–Ω–∏—è", "–ö–æ–º–µ–¥–∏—è", "–î—Ä–∞–º–∞", "–§—ç–Ω—Ç–µ–∑–∏", 
    "–†–æ–º–∞–Ω—Ç–∏–∫–∞", "–§–∞–Ω—Ç–∞—Å—Ç–∏–∫–∞", "–°–≤–µ—Ä—Ö—ä–µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ", "–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ",
    "–¢—Ä–∏–ª–ª–µ—Ä", "–ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ—Å—Ç—å", "–®–∫–æ–ª–∞", "–°–ø–æ—Ä—Ç", "–í–æ–µ–Ω–Ω–æ–µ", "–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π"
]

ANIME_TYPES = [
    {"value": "tv", "label": "TV –°–µ—Ä–∏–∞–ª"},
    {"value": "movie", "label": "–§–∏–ª—å–º"},
    {"value": "ova", "label": "OVA"},
    {"value": "ona", "label": "ONA"},
    {"value": "special", "label": "–°–ø–µ—à–ª"}
]

ANIME_STATUSES = [
    {"value": "released", "label": "–í—ã—à–µ–ª"},
    {"value": "ongoing", "label": "–í—ã—Ö–æ–¥–∏—Ç"},
    {"value": "anons", "label": "–ê–Ω–æ–Ω—Å"}
]

# ===== –°–ï–ó–û–ù–´ =====

SEASONS = [
    {"value": "winter", "label": "–ó–∏–º–∞", "emoji": "‚ùÑÔ∏è"},
    {"value": "spring", "label": "–í–µ—Å–Ω–∞", "emoji": "üå∏"},
    {"value": "summer", "label": "–õ–µ—Ç–æ", "emoji": "‚òÄÔ∏è"},
    {"value": "fall", "label": "–û—Å–µ–Ω—å", "emoji": "üçÇ"}
]

# ===== –§–£–ù–ö–¶–ò–ò-–ü–û–ú–û–©–ù–ò–ö–ò =====

def get_user_setting(key: str, default=None):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    return USER_SETTINGS.get(key, default)

def set_user_setting(key: str, value):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    USER_SETTINGS[key] = value
    # TODO: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–∫

def get_cache_path(cache_type: str) -> Path:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø—É—Ç–∏ –∫ –∫–µ—à—É –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞"""
    cache_paths = {
        "posters": POSTERS_CACHE_DIR,
        "metadata": CACHE_DIR / "metadata",
        "api": CACHE_DIR / "api"
    }
    
    path = cache_paths.get(cache_type, CACHE_DIR)
    path.mkdir(exist_ok=True)
    return path

def is_development() -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∂–∏–º–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"""
    return os.getenv("ANIVEST_DEV", "false").lower() == "true"

# ===== ENVIRONMENT VARIABLES =====

# –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
if os.getenv("SHIKIMORI_BASE_URL"):
    SHIKIMORI_CONFIG["base_url"] = os.getenv("SHIKIMORI_BASE_URL")

if os.getenv("KODIK_TOKEN"):
    KODIK_CONFIG["test_tokens"].insert(0, os.getenv("KODIK_TOKEN"))

if os.getenv("DATABASE_PATH"):
    DATABASE_CONFIG["path"] = os.getenv("DATABASE_PATH")

if is_development():
    LOGGING_CONFIG["level"] = "DEBUG"
    CACHE_CONFIG["cache_timeout"] = 60  # –ö–æ—Ä–æ—Ç–∫–∏–π –∫–µ—à –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ

# ===== –≠–ö–°–ü–û–†–¢ =====

__all__ = [
    "APP_NAME", "APP_VERSION", "WINDOW_CONFIG",
    "SHIKIMORI_CONFIG", "KODIK_CONFIG", "CACHE_CONFIG",
    "DATABASE_CONFIG", "LOGGING_CONFIG", "USER_SETTINGS",
    "HOTKEYS", "LIMITS", "ANIME_GENRES", "ANIME_TYPES",
    "ANIME_STATUSES", "SEASONS", "get_user_setting",
    "set_user_setting", "get_cache_path", "is_development"
]
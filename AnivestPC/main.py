"""
üéØ ANIVEST DESKTOP - –°–ê–ô–î–ë–ê–† –° –ò–ö–û–ù–ö–ê–ú–ò –ò –¢–ï–ö–°–¢–û–ú
=================================================
–°–∞–π–¥–±–∞—Ä 180px —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ –ø–æ–¥–ø–∏—Å—è–º–∏ –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ
"""

import flet as ft
import asyncio
from typing import Optional

class AnivesetDesktop:
    def __init__(self):
        self.current_page = "home"
        self.user_logged_in = False
        self.username = "Anime_Lover"
        self.page = None
        
        # üé® –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ü–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞
        self.colors = {
            "primary": "#8B5CF6",      # –§–∏–æ–ª–µ—Ç–æ–≤—ã–π
            "primary_dark": "#7C3AED", # –¢–µ–º–Ω–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
            "primary_light": "#A78BFA", # –°–≤–µ—Ç–ª–æ-—Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
            "secondary": "#EC4899",    # –†–æ–∑–æ–≤—ã–π  
            "accent": "#F59E0B",       # –Ø–Ω—Ç–∞—Ä–Ω—ã–π
            "success": "#10B981",      # –ó–µ–ª–µ–Ω—ã–π
            "background": "#0F0F23",   # –¢–µ–º–Ω–æ-—Å–∏–Ω–∏–π
            "surface": "#1A1B3A",      # –°–∏–Ω–∏–π
            "surface_light": "#252550", # –°–≤–µ—Ç–ª–µ–µ —Å–∏–Ω–∏–π
            "card": "#2D2D5F",         # –°–≤–µ—Ç–ª–æ-—Å–∏–Ω–∏–π
            "card_hover": "#363670",   # Hover –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
            "hover": "#333366",        # Hover —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            "border": "#404080",       # –ì—Ä–∞–Ω–∏—Ü—ã
            "border_light": "#50508080", # –°–≤–µ—Ç–ª—ã–µ –≥—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é
            "text_primary": "#FFFFFF", # –ë–µ–ª—ã–π
            "text_secondary": "#E2E8F0", # –°–≤–µ—Ç–ª–æ-—Å–µ—Ä—ã–π
            "text_muted": "#94A3B8",   # –°–µ—Ä—ã–π
            "shadow": "#00000060",     # –¢–µ–Ω—å —Ç–µ–º–Ω–µ–µ
        }
        
        # üîß –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –∏–∫–æ–Ω–∫–∏
        self.icons = {
            "play_circle": "play_circle",
            "search": "search", 
            "dark_mode": "dark_mode",
            "person": "person",
            "settings": "settings",
            "close": "close",
            "home": "home",
            "movie": "movie",
            "favorite": "favorite",
            "list": "list",
            "download": "download",
            "trending_up": "trending_up",
            "info": "info",
            "star": "star"
        }

    def main(self, page: ft.Page):
        """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
        self.page = page
        
        # üñ•Ô∏è –ñ–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–æ–≤
        page.title = "Anivest Desktop - –°–∞–π–¥–±–∞—Ä —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º"
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞ —Å –∂–µ—Å—Ç–∫–∏–º–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏
        try:
            # –ù–æ–≤—ã–π API
            page.window_width = 1400
            page.window_height = 900
            page.window_min_width = 1200  # –ú–ò–ù–ò–ú–£–ú 1200px
            page.window_min_height = 800  # –ú–ò–ù–ò–ú–£–ú 800px  
            page.window_max_width = 1920  # –ú–ê–ö–°–ò–ú–£–ú Full HD
            page.window_max_height = 1080 # –ú–ê–ö–°–ò–ú–£–ú Full HD
        except:
            try:
                # –°—Ç–∞—Ä—ã–π API
                page.window.width = 1400
                page.window.height = 900
                page.window.min_width = 1200
                page.window.min_height = 800
                page.window.max_width = 1920
                page.window.max_height = 1080
            except:
                pass
                
        page.theme_mode = ft.ThemeMode.DARK
        page.bgcolor = self.colors["background"]
        page.padding = 0
        page.spacing = 0

        # üé® –¢–µ–º–∞
        try:
            page.theme = ft.Theme(
                color_scheme=ft.ColorScheme(
                    primary=self.colors["primary"],
                    secondary=self.colors["secondary"],
                    background=self.colors["background"],
                    surface=self.colors["surface"],
                    on_primary=self.colors["text_primary"],
                    on_background=self.colors["text_secondary"]
                )
            )
        except:
            pass

        # üì± –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_ui(page)

    def create_ui(self, page: ft.Page):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        
        # üîù –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        header = self.create_header()
        
        # üì± –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –æ—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —à–∏—Ä–∏–Ω–æ–π —Å–∞–π–¥–±–∞—Ä–∞
        main_content = ft.Row(
            controls=[
                # –ò–°–ü–†–ê–í–õ–ï–ù–û: –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω–æ–π —à–∏—Ä–∏–Ω–æ–π –¥–ª—è —Å–∞–π–¥–±–∞—Ä–∞ —Å —Ç–µ–∫—Å—Ç–æ–º
                ft.Container(
                    content=self.create_compact_sidebar(),
                    width=180,  # –£–≤–µ–ª–∏—á–∏–ª–∏ —à–∏—Ä–∏–Ω—É –¥–ª—è –∏–∫–æ–Ω–∫–∏ + —Ç–µ–∫—Å—Ç
                    bgcolor=self.colors["surface"],
                ),
                # –¢–æ–Ω–∫–∏–π —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                ft.Container(
                    width=2,
                    bgcolor=self.colors["border"],
                ),
                # –ö–æ–Ω—Ç–µ–Ω—Ç –∑–∞–Ω–∏–º–∞–µ—Ç –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –º–µ—Å—Ç–æ
                ft.Container(
                    content=self.create_content_area(),
                    expand=True,  # –†–∞—Å—à–∏—Ä—è–µ—Ç—Å—è –Ω–∞ –≤—Å—ë –æ—Å—Ç–∞–≤—à–µ–µ—Å—è –º–µ—Å—Ç–æ
                    bgcolor=self.colors["background"],
                )
            ],
            expand=True,
            spacing=0,
        )

        # üñ•Ô∏è –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_container = ft.Column(
            controls=[
                header,
                ft.Container(height=2, bgcolor=self.colors["border"]),  # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
                main_content
            ],
            expand=True,
            spacing=0,
        )

        page.add(main_container)
        page.update()

    def create_header(self) -> ft.Container:
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–ø–∞–∫—Ç–Ω–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        
        # üü£ –ú–∏–Ω–∏ –ª–æ–≥–æ—Ç–∏–ø
        logo = ft.Container(
            content=ft.Row(
                controls=[
                    ft.Container(
                        content=ft.Icon(
                            self.icons["play_circle"], 
                            color=self.colors["text_primary"], 
                            size=28
                        ),
                        bgcolor=self.colors["primary"],
                        border_radius=50,
                        width=36,
                        height=36,
                        alignment=ft.alignment.center,
                    ),
                    ft.Text(
                        "Anivest", 
                        size=20, 
                        weight=ft.FontWeight.BOLD,
                        color=self.colors["text_primary"]
                    )
                ],
                spacing=10,
            ),
            padding=ft.padding.symmetric(horizontal=6, vertical=4),
        )

        # üîç –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –ø–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
        search_field = ft.Container(
            content=ft.TextField(
                hint_text="–ü–æ–∏—Å–∫ –∞–Ω–∏–º–µ...",
                prefix_icon=self.icons["search"],
                border_color=self.colors["border"],
                focused_border_color=self.colors["primary"],
                bgcolor=self.colors["surface"],
                color=self.colors["text_primary"],
                border_radius=20,
                height=40,
                text_size=13,
                content_padding=ft.padding.symmetric(horizontal=15, vertical=10),
            ),
            width=380,
        )

        # üë§ –ö–æ–º–ø–∞–∫—Ç–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        user_buttons = ft.Row(
            controls=[
                # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã
                ft.IconButton(
                    icon=self.icons["dark_mode"],
                    icon_color=self.colors["text_muted"],
                    tooltip="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É",
                    on_click=self.toggle_theme,
                    icon_size=18,
                ),
                # –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å
                ft.Container(
                    content=ft.Row(
                        controls=[
                            ft.Container(
                                content=ft.Icon(self.icons["person"], color=self.colors["text_primary"], size=16),
                                bgcolor=self.colors["primary"],
                                border_radius=50,
                                width=28,
                                height=28,
                                alignment=ft.alignment.center,
                            ),
                            ft.Text(self.username, color=self.colors["text_primary"], size=13, weight=ft.FontWeight.W_500)
                        ],
                        spacing=8,
                    ),
                    bgcolor=self.colors["surface"],
                    border_radius=20,
                    padding=ft.padding.symmetric(horizontal=12, vertical=6),
                    on_click=self.open_profile,
                ),
                # –ù–∞—Å—Ç—Ä–æ–π–∫–∏
                ft.IconButton(
                    icon=self.icons["settings"],
                    icon_color=self.colors["text_muted"],
                    tooltip="–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                    on_click=self.open_settings,
                    icon_size=18,
                ),
                # –ó–∞–∫—Ä—ã—Ç—å
                ft.IconButton(
                    icon=self.icons["close"],
                    icon_color=self.colors["text_muted"],
                    tooltip="–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
                    on_click=self.close_app,
                    icon_size=18,
                ),
            ],
            spacing=6,
        )

        return ft.Container(
            content=ft.Row(
                controls=[logo, search_field, user_buttons],
                alignment=ft.MainAxisAlignment.SPACE_BETWEEN,
                vertical_alignment=ft.CrossAxisAlignment.CENTER,
            ),
            bgcolor=self.colors["surface"],
            padding=ft.padding.symmetric(horizontal=15, vertical=8),
            height=55,
        )

    def create_compact_sidebar(self) -> ft.Column:
        """–°–∞–π–¥–±–∞—Ä —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º"""
        
        # üì± –≠–ª–µ–º–µ–Ω—Ç—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ (–∏–∫–æ–Ω–∫–∏ + —Ç–µ–∫—Å—Ç)
        nav_items = [
            {"icon": self.icons["home"], "text": "–ì–ª–∞–≤–Ω–∞—è", "page": "home"},
            {"icon": self.icons["movie"], "text": "–ö–∞—Ç–∞–ª–æ–≥", "page": "catalog"},
            {"icon": self.icons["favorite"], "text": "–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "page": "favorites"},
            {"icon": self.icons["list"], "text": "–ú–æ–π —Å–ø–∏—Å–æ–∫", "page": "my_list"},
            {"icon": self.icons["download"], "text": "–ó–∞–≥—Ä—É–∑–∫–∏", "page": "downloads"},
        ]

        profile_items = [
            {"icon": self.icons["trending_up"], "text": "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "page": "stats"},
            {"icon": self.icons["settings"], "text": "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "page": "settings"},
            {"icon": self.icons["info"], "text": "–û –ø—Ä–æ–≥—Ä–∞–º–º–µ", "page": "about"},
        ]

        def create_sidebar_button(item):
            is_active = item["page"] == self.current_page
            
            return ft.Container(
                content=ft.Container(
                    content=ft.Row(
                        controls=[
                            ft.Icon(
                                item["icon"],
                                color=self.colors["text_primary"] if is_active else self.colors["text_muted"],
                                size=20,
                            ),
                            ft.Text(
                                item["text"],
                                color=self.colors["text_primary"] if is_active else self.colors["text_muted"],
                                size=14,
                                weight=ft.FontWeight.W_500 if is_active else ft.FontWeight.NORMAL,
                            )
                        ],
                        spacing=12,
                        vertical_alignment=ft.CrossAxisAlignment.CENTER,
                    ),
                    padding=ft.padding.symmetric(horizontal=16, vertical=12),
                    on_click=lambda e, page=item["page"]: self.navigate_to(page),
                    ink=True,
                ),
                bgcolor=self.colors["primary"] if is_active else "transparent",
                border_radius=12,
                margin=ft.margin.symmetric(horizontal=8, vertical=2),
                height=48,  # –£–≤–µ–ª–∏—á–∏–ª–∏ –≤—ã—Å–æ—Ç—É –∫–Ω–æ–ø–æ–∫
            )

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        nav_buttons = [create_sidebar_button(item) for item in nav_items]
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å —Å —Ç–µ–∫—Å—Ç–æ–º "–ü–†–û–§–ò–õ–¨"
        divider_section = ft.Container(
            content=ft.Column(
                controls=[
                    ft.Container(
                        height=1,
                        bgcolor=self.colors["border"],
                        margin=ft.margin.symmetric(horizontal=16, vertical=8),
                    ),
                    ft.Container(
                        content=ft.Text(
                            "–ü–†–û–§–ò–õ–¨",
                            size=11,
                            color=self.colors["text_muted"],
                            weight=ft.FontWeight.W_600,
                        ),
                        padding=ft.padding.symmetric(horizontal=16, vertical=4),
                    )
                ],
                spacing=0,
            ),
        )
        
        profile_buttons = [create_sidebar_button(item) for item in profile_items]

        # –°–æ–±–∏—Ä–∞–µ–º —Å–∞–π–¥–±–∞—Ä
        return ft.Column(
            controls=[
                ft.Container(height=12),  # –û—Ç—Å—Ç—É–ø —Å–≤–µ—Ä—Ö—É
                *nav_buttons,
                divider_section,
                *profile_buttons,
                ft.Container(height=12),  # –û—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É
            ],
            spacing=0,
            scroll=ft.ScrollMode.AUTO,
        )

    def create_content_area(self) -> ft.Column:
        """–°–æ–∑–¥–∞–Ω–∏–µ –æ–±–ª–∞—Å—Ç–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        
        # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
        if self.current_page == "home":
            content = self.create_improved_home_page()
        elif self.current_page == "catalog":
            content = self.create_catalog_page()
        elif self.current_page == "favorites":
            content = self.create_favorites_page()
        else:
            content = self.create_placeholder_page()

        # –ò–°–ü–†–ê–í–õ–ï–ù–û: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞–ø—Ä—è–º—É—é —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏
        return ft.Container(
            content=content,
            padding=35,  # –ë–æ–ª—å—à–µ –æ—Ç—Å—Ç—É–ø–æ–≤ –±–ª–∞–≥–æ–¥–∞—Ä—è —Å—É–ø–µ—Ä-—É–∑–∫–æ–º—É —Å–∞–π–¥–±–∞—Ä—É
            expand=True,
        )

    def create_improved_home_page(self) -> ft.Column:
        """–£–õ–£–ß–®–ï–ù–ù–ê–Ø –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –±–æ–ª—å—à–∏–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ–º"""
        
        # üî• –ö–∞—Ä—Ç–æ—á–∫–∏ –∞–Ω–∏–º–µ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º
        popular_cards = []
        anime_titles = [
            ("Attack on Titan", "9.2", "24 —ç–ø"),
            ("Demon Slayer", "8.5", "12 —ç–ø"),
            ("Jujutsu Kaisen", "8.8", "24 —ç–ø"),
            ("One Piece", "9.0", "1000+ —ç–ø"),
            ("Naruto", "8.3", "220 —ç–ø"),
            ("Death Note", "9.1", "37 —ç–ø"),
            ("My Hero Academia", "8.7", "150+ —ç–ø"),
            ("Tokyo Ghoul", "8.1", "48 —ç–ø"),
        ]

        for title, rating, episodes in anime_titles:
            card = ft.Container(
                content=ft.Column(
                    controls=[
                        # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ø–æ—Å—Ç–µ—Ä
                        ft.Container(
                            content=ft.Stack(
                                controls=[
                                    ft.Container(
                                        bgcolor=self.colors["card"],
                                        border_radius=15,
                                        width=190,
                                        height=250,
                                    ),
                                    ft.Container(
                                        content=ft.Icon(
                                            self.icons["movie"], 
                                            size=65, 
                                            color=self.colors["text_muted"]
                                        ),
                                        alignment=ft.alignment.center,
                                        width=190,
                                        height=250,
                                    ),
                                    # –ì—Ä–∞–¥–∏–µ–Ω—Ç —Å–Ω–∏–∑—É
                                    ft.Container(
                                        bgcolor=self.colors["background"] + "90",
                                        border_radius=ft.border_radius.only(
                                            bottom_left=15, bottom_right=15
                                        ),
                                        width=190,
                                        height=70,
                                        alignment=ft.alignment.bottom_center,
                                    )
                                ]
                            ),
                            width=190,
                            height=250,
                            border_radius=15,
                            shadow=ft.BoxShadow(
                                spread_radius=0,
                                blur_radius=20,
                                color=self.colors["shadow"],
                                offset=ft.Offset(0, 8),
                            ),
                        ),
                        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        ft.Column(
                            controls=[
                                ft.Text(
                                    title, 
                                    size=15, 
                                    weight=ft.FontWeight.W_600,
                                    color=self.colors["text_primary"],
                                    text_align=ft.TextAlign.CENTER,
                                    max_lines=2,
                                    overflow=ft.TextOverflow.ELLIPSIS,
                                ),
                                ft.Container(
                                    content=ft.Row(
                                        controls=[
                                            ft.Icon(self.icons["star"], color=self.colors["accent"], size=16),
                                            ft.Text(rating, color=self.colors["text_secondary"], size=13, weight=ft.FontWeight.W_500),
                                            ft.Text("‚Ä¢", color=self.colors["text_muted"], size=13),
                                            ft.Text(episodes, color=self.colors["text_secondary"], size=13),
                                        ],
                                        alignment=ft.MainAxisAlignment.CENTER,
                                        spacing=6,
                                    ),
                                    bgcolor=self.colors["surface"],
                                    border_radius=25,
                                    padding=ft.padding.symmetric(horizontal=15, vertical=6),
                                )
                            ],
                            spacing=10,
                            horizontal_alignment=ft.CrossAxisAlignment.CENTER,
                        )
                    ],
                    spacing=15,
                ),
                width=190,
                on_click=lambda e, t=title: self.open_anime(t),
                ink=True,
                border_radius=15,
                padding=10,
                bgcolor="transparent",
            )
            popular_cards.append(card)

        # üì± –£–ª—É—á—à–µ–Ω–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
        def create_wide_section(title, emoji, cards):
            return ft.Container(
                content=ft.Column(
                    controls=[
                        ft.Row(
                            controls=[
                                ft.Text(
                                    f"{emoji} {title}", 
                                    size=24, 
                                    weight=ft.FontWeight.BOLD,
                                    color=self.colors["text_primary"]
                                ),
                                ft.Container(
                                    content=ft.TextButton(
                                        "–°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ ‚Üí", 
                                        on_click=lambda e: self.navigate_to("catalog"),
                                        style=ft.ButtonStyle(
                                            color=self.colors["primary"],
                                        )
                                    ),
                                ),
                            ],
                            alignment=ft.MainAxisAlignment.SPACE_BETWEEN,
                        ),
                        ft.Container(
                            content=ft.Row(
                                controls=cards,
                                spacing=30,
                                scroll=ft.ScrollMode.AUTO,
                            ),
                            padding=ft.padding.symmetric(vertical=15),
                        )
                    ],
                    spacing=20,
                ),
                bgcolor=self.colors["surface"],
                border_radius=20,
                padding=25,
                margin=ft.margin.symmetric(vertical=15),
                shadow=ft.BoxShadow(
                    spread_radius=0,
                    blur_radius=25,
                    color=self.colors["shadow"],
                    offset=ft.Offset(0, 8),
                ),
            )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–æ–ª—å—à–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –±–ª–∞–≥–æ–¥–∞—Ä—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–Ω–æ–º—É –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤—É
        popular_section = create_wide_section("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–µ–π—á–∞—Å", "üî•", popular_cards[:6])
        new_section = create_wide_section("–ù–æ–≤–∏–Ω–∫–∏ —Å–µ–∑–æ–Ω–∞ ‚ùÑÔ∏è –ó–∏–º–∞ 2025", "üÜï", popular_cards[2:8])

        return ft.Column(
            controls=[
                ft.Container(
                    content=ft.Column(
                        controls=[
                            ft.Text(
                                "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Anivest!", 
                                size=36,
                                weight=ft.FontWeight.BOLD,
                                color=self.colors["text_primary"]
                            ),
                            ft.Text(
                                "–°–º–æ—Ç—Ä–∏—Ç–µ –∞–Ω–∏–º–µ –≤ –ª—É—á—à–µ–º –∫–∞—á–µ—Å—Ç–≤–µ ‚Ä¢ –°–∞–π–¥–±–∞—Ä —Å –∏–∫–æ–Ω–∫–∞–º–∏ –∏ —Ç–µ–∫—Å—Ç–æ–º ‚Ä¢ –£–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è", 
                                size=18, 
                                color=self.colors["text_secondary"]
                            ),
                        ]
                    ),
                    margin=ft.margin.only(bottom=25),
                ),
                popular_section,
                new_section,
            ],
            spacing=0,
            scroll=ft.ScrollMode.AUTO,
        )

    def create_catalog_page(self) -> ft.Column:
        """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–∞—Ç–∞–ª–æ–≥–∞"""
        return ft.Column(
            controls=[
                ft.Text(
                    "üì∫ –ö–∞—Ç–∞–ª–æ–≥ –∞–Ω–∏–º–µ", 
                    size=32, 
                    weight=ft.FontWeight.BOLD,
                    color=self.colors["text_primary"]
                ),
                ft.Text(
                    "–ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∏–º–µ ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∏–Ω–∏-—Å–∞–π–¥–±–∞—Ä –æ—Å–≤–æ–±–æ–∂–¥–∞–µ—Ç –º–µ—Å—Ç–æ", 
                    size=18, 
                    color=self.colors["text_secondary"]
                ),
                ft.Container(height=25),
                ft.Container(
                    content=ft.Text("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å–µ—Ç–∫–∞ –∞–Ω–∏–º–µ...", color=self.colors["text_muted"], size=18),
                    alignment=ft.alignment.center,
                    height=300,
                    bgcolor=self.colors["surface"],
                    border_radius=15,
                )
            ],
            scroll=ft.ScrollMode.AUTO,
        )

    def create_favorites_page(self) -> ft.Column:
        """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ"""
        return ft.Column(
            controls=[
                ft.Text(
                    "‚≠ê –ò–∑–±—Ä–∞–Ω–Ω–æ–µ", 
                    size=32, 
                    weight=ft.FontWeight.BOLD,
                    color=self.colors["text_primary"]
                ),
                ft.Text(
                    "–í–∞—à–∏ –ª—é–±–∏–º—ã–µ –∞–Ω–∏–º–µ ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∏–Ω–∏-—Å–∞–π–¥–±–∞—Ä = –Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞", 
                    size=18, 
                    color=self.colors["text_secondary"]
                ),
                ft.Container(height=50),
                ft.Container(
                    content=ft.Text("–ù–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö –∞–Ω–∏–º–µ!", color=self.colors["primary"], size=20),
                    alignment=ft.alignment.center,
                    height=300,
                    bgcolor=self.colors["surface"],
                    border_radius=15,
                )
            ],
            scroll=ft.ScrollMode.AUTO,
        )

    def create_placeholder_page(self) -> ft.Column:
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã-–∑–∞–≥–ª—É—à–∫–∏"""
        return ft.Column(
            controls=[
                ft.Text(
                    "üöß –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", 
                    size=32, 
                    weight=ft.FontWeight.BOLD,
                    color=self.colors["text_primary"]
                ),
                ft.Text(
                    "–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –µ—â–µ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ‚Ä¢ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∏–Ω–∏-—Å–∞–π–¥–±–∞—Ä –≥–æ—Ç–æ–≤!", 
                    size=18, 
                    color=self.colors["text_secondary"]
                ),
            ],
            alignment=ft.MainAxisAlignment.CENTER,
            horizontal_alignment=ft.CrossAxisAlignment.CENTER,
        )

    # üéõÔ∏è –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    def navigate_to(self, page_name: str):
        """–ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏"""
        self.current_page = page_name
        if self.page:
            self.page.clean()
            self.create_ui(self.page)
        print(f"üîÑ –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: {page_name} (—Å–∞–π–¥–±–∞—Ä —Å —Ç–µ–∫—Å—Ç–æ–º)")

    def toggle_theme(self, e):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã"""
        print("üé® –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã (—Å–∞–π–¥–±–∞—Ä —Å —Ç–µ–∫—Å—Ç–æ–º)")

    def open_profile(self, e):
        """–û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å"""
        print("üë§ –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–æ—Ñ–∏–ª—å (—Å–∞–π–¥–±–∞—Ä —Å —Ç–µ–∫—Å—Ç–æ–º)")

    def open_settings(self, e):
        """–û—Ç–∫—Ä—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        self.navigate_to("settings")

    def close_app(self, e):
        """–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
        try:
            e.page.window.close()
        except:
            try:
                e.page.window_close()
            except:
                import sys
                sys.exit()

    def open_anime(self, title: str):
        """–û—Ç–∫—Ä—ã—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–Ω–∏–º–µ"""
        print(f"üé¨ –û—Ç–∫—Ä—ã—Ç—å –∞–Ω–∏–º–µ: {title} (–Ω–∞–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –º–µ—Å—Ç–∞ –±–ª–∞–≥–æ–¥–∞—Ä—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–º—É —É–∑–∫–æ–º—É —Å–∞–π–¥–±–∞—Ä—É)")


def main(page: ft.Page):
    """–¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ"""
    app = AnivesetDesktop()
    app.main(page)


if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ Anivest Desktop - –°–ê–ô–î–ë–ê–† –° –ò–ö–û–ù–ö–ê–ú–ò –ò –¢–ï–ö–°–¢–û–ú")
    print("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ–¥–ø–∏—Å–∏ –∫ –∫–Ω–æ–ø–∫–∞–º –Ω–∞–≤–∏–≥–∞—Ü–∏–∏")
    print("üì± –®–∏—Ä–∏–Ω–∞ —Å–∞–π–¥–±–∞—Ä–∞: 180px (–∏–∫–æ–Ω–∫–∞ + —Ç–µ–∫—Å—Ç)")
    print("üéØ –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ 48px –≤—ã—Å–æ—Ç–æ–π")
    print("üîß –ñ–µ—Å—Ç–∫–∏–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è: 1200x800 - 1920x1080")
    print("‚≠ê –£–¥–æ–±–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è —Å –ø–æ–¥–ø–∏—Å—è–º–∏!")
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    ft.app(target=main)